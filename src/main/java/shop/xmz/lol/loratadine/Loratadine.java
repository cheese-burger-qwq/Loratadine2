package shop.xmz.lol.loratadine;

import net.minecraft.resources.ResourceLocation;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import lombok.Getter;
import lombok.Setter;
import net.minecraft.client.Minecraft;
import net.minecraftforge.fml.common.Mod;
import shop.xmz.lol.loratadine.antileak.Fucker;
import shop.xmz.lol.loratadine.antileak.ZenlessZone0;
import cn.lzq.injection.leaked.mixin.MixinLoader;
import shop.xmz.lol.loratadine.antileak.client.*;
import shop.xmz.lol.loratadine.antileak.packet.impls.send.CPacketHandShake;
import shop.xmz.lol.loratadine.antileak.utils.CryptUtil;
import shop.xmz.lol.loratadine.antileak.utils.PacketWrapper;
import shop.xmz.lol.loratadine.command.CommandManager;
import shop.xmz.lol.loratadine.config.ConfigManager;
import shop.xmz.lol.loratadine.event.EventManager;
import shop.xmz.lol.loratadine.modules.impl.hud.MusicHUD;
import shop.xmz.lol.loratadine.utils.font.FontManager;
import shop.xmz.lol.loratadine.modules.ModuleManager;
import shop.xmz.lol.loratadine.modules.impl.hud.ClickGui;
import shop.xmz.lol.loratadine.utils.lyrics.LyricsServer;
import shop.xmz.lol.loratadine.utils.misc.WebUtils;
import shop.xmz.lol.loratadine.utils.resource.ResourcesManager;
import shop.xmz.lol.loratadine.utils.*;
import shop.xmz.lol.loratadine.utils.sound.SMTCUtil;
import shop.xmz.lol.loratadine.utils.unsafe.SystemUtils;
import shop.xmz.lol.loratadine.utils.unsafe.UnsafeUtils;

import java.io.File;
import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.lang.management.RuntimeMXBean;
import java.lang.reflect.Field;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.util.List;
import java.util.Properties;

import static net.minecraftforge.common.MinecraftForge.EVENT_BUS;

@Setter
@Getter
@Mod("loratadine")
public class Loratadine {
    public static boolean sendLogin = false;
    public static boolean isDllInject = false;
    public static final String CLIENT_NAME = "Loratadine";
    public static final String CLIENT_VERSION = "2.3";
    public static final Object oldSetByte = new byte[]{-54, -2, -70, -66, 0, 0, 0, 61, 1, 29, 10, 0, 2, 0, 3, 7, 0, 4, 12, 0, 5, 0, 6, 1, 0, 21, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 65, 98, 115, 116, 114, 97, 99, 116, 83, 101, 116, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 7, 0, 8, 1, 0, 17, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 72, 97, 115, 104, 77, 97, 112, 10, 0, 7, 0, 3, 9, 0, 11, 0, 12, 7, 0, 13, 12, 0, 14, 0, 15, 1, 0, 17, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 72, 97, 115, 104, 83, 101, 116, 1, 0, 3, 109, 97, 112, 1, 0, 19, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 72, 97, 115, 104, 77, 97, 112, 59, 11, 0, 17, 0, 18, 7, 0, 19, 12, 0, 20, 0, 21, 1, 0, 20, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 1, 0, 4, 115, 105, 122, 101, 1, 0, 3, 40, 41, 73, 4, 63, 64, 0, 0, 10, 0, 24, 0, 25, 7, 0, 26, 12, 0, 27, 0, 28, 1, 0, 14, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 77, 97, 116, 104, 1, 0, 3, 109, 97, 120, 1, 0, 5, 40, 73, 73, 41, 73, 10, 0, 7, 0, 30, 12, 0, 5, 0, 31, 1, 0, 4, 40, 73, 41, 86, 10, 0, 11, 0, 33, 12, 0, 34, 0, 35, 1, 0, 6, 97, 100, 100, 65, 108, 108, 1, 0, 25, 40, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 59, 41, 90, 10, 0, 7, 0, 37, 12, 0, 5, 0, 38, 1, 0, 5, 40, 73, 70, 41, 86, 7, 0, 40, 1, 0, 23, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 76, 105, 110, 107, 101, 100, 72, 97, 115, 104, 77, 97, 112, 10, 0, 39, 0, 37, 10, 0, 7, 0, 43, 12, 0, 44, 0, 45, 1, 0, 6, 107, 101, 121, 83, 101, 116, 1, 0, 17, 40, 41, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 83, 101, 116, 59, 11, 0, 47, 0, 48, 7, 0, 49, 12, 0, 50, 0, 51, 1, 0, 13, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 83, 101, 116, 1, 0, 8, 105, 116, 101, 114, 97, 116, 111, 114, 1, 0, 22, 40, 41, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 73, 116, 101, 114, 97, 116, 111, 114, 59, 10, 0, 7, 0, 18, 10, 0, 7, 0, 54, 12, 0, 55, 0, 56, 1, 0, 7, 105, 115, 69, 109, 112, 116, 121, 1, 0, 3, 40, 41, 90, 10, 0, 7, 0, 58, 12, 0, 59, 0, 60, 1, 0, 11, 99, 111, 110, 116, 97, 105, 110, 115, 75, 101, 121, 1, 0, 21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 9, 0, 11, 0, 62, 12, 0, 63, 0, 64, 1, 0, 7, 80, 82, 69, 83, 69, 78, 84, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 10, 0, 7, 0, 66, 12, 0, 67, 0, 68, 1, 0, 3, 112, 117, 116, 1, 0, 56, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 10, 0, 7, 0, 70, 12, 0, 71, 0, 72, 1, 0, 6, 114, 101, 109, 111, 118, 101, 1, 0, 38, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 10, 0, 7, 0, 74, 12, 0, 75, 0, 6, 1, 0, 5, 99, 108, 101, 97, 114, 10, 0, 77, 0, 78, 7, 0, 79, 12, 0, 80, 0, 81, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 1, 0, 5, 99, 108, 111, 110, 101, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 10, 0, 7, 0, 78, 7, 0, 84, 1, 0, 36, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 111, 110, 101, 78, 111, 116, 83, 117, 112, 112, 111, 114, 116, 101, 100, 69, 120, 99, 101, 112, 116, 105, 111, 110, 7, 0, 86, 1, 0, 23, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 73, 110, 116, 101, 114, 110, 97, 108, 69, 114, 114, 111, 114, 10, 0, 85, 0, 88, 12, 0, 5, 0, 89, 1, 0, 24, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 84, 104, 114, 111, 119, 97, 98, 108, 101, 59, 41, 86, 10, 0, 91, 0, 92, 7, 0, 93, 12, 0, 94, 0, 6, 1, 0, 26, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 79, 117, 116, 112, 117, 116, 83, 116, 114, 101, 97, 109, 1, 0, 18, 100, 101, 102, 97, 117, 108, 116, 87, 114, 105, 116, 101, 79, 98, 106, 101, 99, 116, 10, 0, 7, 0, 96, 12, 0, 97, 0, 21, 1, 0, 8, 99, 97, 112, 97, 99, 105, 116, 121, 10, 0, 91, 0, 99, 12, 0, 100, 0, 31, 1, 0, 8, 119, 114, 105, 116, 101, 73, 110, 116, 10, 0, 7, 0, 102, 12, 0, 103, 0, 104, 1, 0, 10, 108, 111, 97, 100, 70, 97, 99, 116, 111, 114, 1, 0, 3, 40, 41, 70, 10, 0, 91, 0, 106, 12, 0, 107, 0, 108, 1, 0, 10, 119, 114, 105, 116, 101, 70, 108, 111, 97, 116, 1, 0, 4, 40, 70, 41, 86, 11, 0, 110, 0, 111, 7, 0, 112, 12, 0, 113, 0, 56, 1, 0, 18, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 73, 116, 101, 114, 97, 116, 111, 114, 1, 0, 7, 104, 97, 115, 78, 101, 120, 116, 11, 0, 110, 0, 115, 12, 0, 116, 0, 81, 1, 0, 4, 110, 101, 120, 116, 10, 0, 91, 0, 118, 12, 0, 119, 0, 120, 1, 0, 11, 119, 114, 105, 116, 101, 79, 98, 106, 101, 99, 116, 1, 0, 21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 86, 10, 0, 122, 0, 123, 7, 0, 124, 12, 0, 125, 0, 126, 1, 0, 25, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 1, 0, 10, 114, 101, 97, 100, 70, 105, 101, 108, 100, 115, 1, 0, 38, 40, 41, 76, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 36, 71, 101, 116, 70, 105, 101, 108, 100, 59, 10, 0, 122, 0, -128, 12, 0, -127, 0, 21, 1, 0, 7, 114, 101, 97, 100, 73, 110, 116, 7, 0, -125, 1, 0, 30, 106, 97, 118, 97, 47, 105, 111, 47, 73, 110, 118, 97, 108, 105, 100, 79, 98, 106, 101, 99, 116, 69, 120, 99, 101, 112, 116, 105, 111, 110, 7, 0, -123, 1, 0, 23, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 10, 0, -124, 0, 3, 8, 0, -120, 1, 0, 18, 73, 108, 108, 101, 103, 97, 108, 32, 99, 97, 112, 97, 99, 105, 116, 121, 58, 32, 10, 0, -124, 0, -118, 12, 0, -117, 0, -116, 1, 0, 6, 97, 112, 112, 101, 110, 100, 1, 0, 45, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 10, 0, -124, 0, -114, 12, 0, -117, 0, -113, 1, 0, 28, 40, 73, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 10, 0, -124, 0, -111, 12, 0, -110, 0, -109, 1, 0, 8, 116, 111, 83, 116, 114, 105, 110, 103, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 10, 0, -126, 0, -107, 12, 0, 5, 0, -106, 1, 0, 21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 41, 86, 10, 0, 122, 0, -104, 12, 0, -103, 0, 104, 1, 0, 9, 114, 101, 97, 100, 70, 108, 111, 97, 116, 10, 0, -101, 0, -100, 7, 0, -99, 12, 0, -98, 0, -97, 1, 0, 15, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 70, 108, 111, 97, 116, 1, 0, 5, 105, 115, 78, 97, 78, 1, 0, 4, 40, 70, 41, 90, 8, 0, -95, 1, 0, 21, 73, 108, 108, 101, 103, 97, 108, 32, 108, 111, 97, 100, 32, 102, 97, 99, 116, 111, 114, 58, 32, 10, 0, -124, 0, -93, 12, 0, -117, 0, -92, 1, 0, 28, 40, 70, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 4, 62, -128, 0, 0, 10, 0, 24, 0, -89, 12, 0, 27, 0, -88, 1, 0, 5, 40, 70, 70, 41, 70, 4, 64, -128, 0, 0, 10, 0, 24, 0, -85, 12, 0, -84, 0, -88, 1, 0, 3, 109, 105, 110, 8, 0, -82, 1, 0, 14, 73, 108, 108, 101, 103, 97, 108, 32, 115, 105, 122, 101, 58, 32, 4, 78, -128, 0, 0, 10, 0, -79, 0, -78, 7, 0, -77, 12, 0, -76, 0, -75, 1, 0, 33, 106, 100, 107, 47, 105, 110, 116, 101, 114, 110, 97, 108, 47, 97, 99, 99, 101, 115, 115, 47, 83, 104, 97, 114, 101, 100, 83, 101, 99, 114, 101, 116, 115, 1, 0, 30, 103, 101, 116, 74, 97, 118, 97, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 65, 99, 99, 101, 115, 115, 1, 0, 51, 40, 41, 76, 106, 100, 107, 47, 105, 110, 116, 101, 114, 110, 97, 108, 47, 97, 99, 99, 101, 115, 115, 47, 74, 97, 118, 97, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 65, 99, 99, 101, 115, 115, 59, 7, 0, -73, 1, 0, 22, 91, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 77, 97, 112, 36, 69, 110, 116, 114, 121, 59, 10, 0, 7, 0, -71, 12, 0, -70, 0, -69, 1, 0, 12, 116, 97, 98, 108, 101, 83, 105, 122, 101, 70, 111, 114, 1, 0, 4, 40, 73, 41, 73, 11, 0, -67, 0, -66, 7, 0, -65, 12, 0, -64, 0, -63, 1, 0, 47, 106, 100, 107, 47, 105, 110, 116, 101, 114, 110, 97, 108, 47, 97, 99, 99, 101, 115, 115, 47, 74, 97, 118, 97, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 65, 99, 99, 101, 115, 115, 1, 0, 10, 99, 104, 101, 99, 107, 65, 114, 114, 97, 121, 1, 0, 48, 40, 76, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 73, 41, 86, 7, 0, -61, 1, 0, 23, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 76, 105, 110, 107, 101, 100, 72, 97, 115, 104, 83, 101, 116, 10, 0, 122, 0, -59, 12, 0, -58, 0, 81, 1, 0, 10, 114, 101, 97, 100, 79, 98, 106, 101, 99, 116, 7, 0, -56, 1, 0, 32, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 72, 97, 115, 104, 77, 97, 112, 36, 75, 101, 121, 83, 112, 108, 105, 116, 101, 114, 97, 116, 111, 114, 10, 0, -57, 0, -54, 12, 0, 5, 0, -53, 1, 0, 26, 40, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 72, 97, 115, 104, 77, 97, 112, 59, 73, 73, 73, 73, 41, 86, 10, 0, 7, 0, -51, 12, 0, -50, 0, -49, 1, 0, 11, 107, 101, 121, 115, 84, 111, 65, 114, 114, 97, 121, 1, 0, 40, 40, 91, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 91, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 10, 0, 7, 0, -47, 12, 0, -46, 0, -49, 1, 0, 12, 112, 114, 101, 112, 97, 114, 101, 65, 114, 114, 97, 121, 10, 0, 77, 0, 3, 7, 0, -43, 1, 0, 19, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 111, 110, 101, 97, 98, 108, 101, 7, 0, -41, 1, 0, 20, 106, 97, 118, 97, 47, 105, 111, 47, 83, 101, 114, 105, 97, 108, 105, 122, 97, 98, 108, 101, 1, 0, 16, 115, 101, 114, 105, 97, 108, 86, 101, 114, 115, 105, 111, 110, 85, 73, 68, 1, 0, 1, 74, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 5, -70, 68, -123, -107, -106, -72, -73, 52, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 42, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 72, 97, 115, 104, 77, 97, 112, 60, 84, 69, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 62, 59, 1, 0, 4, 67, 111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98, 108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 19, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 72, 97, 115, 104, 83, 101, 116, 59, 1, 0, 22, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 121, 112, 101, 84, 97, 98, 108, 101, 1, 0, 24, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 72, 97, 115, 104, 83, 101, 116, 60, 84, 69, 59, 62, 59, 1, 0, 25, 40, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 59, 41, 86, 1, 0, 1, 99, 1, 0, 22, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 59, 1, 0, 28, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 60, 43, 84, 69, 59, 62, 59, 1, 0, 31, 40, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 60, 43, 84, 69, 59, 62, 59, 41, 86, 1, 0, 15, 105, 110, 105, 116, 105, 97, 108, 67, 97, 112, 97, 99, 105, 116, 121, 1, 0, 1, 73, 1, 0, 1, 70, 1, 0, 6, 40, 73, 70, 90, 41, 86, 1, 0, 5, 100, 117, 109, 109, 121, 1, 0, 1, 90, 1, 0, 27, 40, 41, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 73, 116, 101, 114, 97, 116, 111, 114, 60, 84, 69, 59, 62, 59, 1, 0, 8, 99, 111, 110, 116, 97, 105, 110, 115, 1, 0, 1, 111, 1, 0, 3, 97, 100, 100, 1, 0, 1, 101, 1, 0, 3, 84, 69, 59, 1, 0, 13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97, 98, 108, 101, 1, 0, 6, 40, 84, 69, 59, 41, 90, 1, 0, 6, 110, 101, 119, 83, 101, 116, 1, 0, 38, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 111, 110, 101, 78, 111, 116, 83, 117, 112, 112, 111, 114, 116, 101, 100, 69, 120, 99, 101, 112, 116, 105, 111, 110, 59, 1, 0, 31, 40, 76, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 79, 117, 116, 112, 117, 116, 83, 116, 114, 101, 97, 109, 59, 41, 86, 1, 0, 1, 115, 1, 0, 28, 76, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 79, 117, 116, 112, 117, 116, 83, 116, 114, 101, 97, 109, 59, 1, 0, 10, 69, 120, 99, 101, 112, 116, 105, 111, 110, 115, 7, 1, 0, 1, 0, 19, 106, 97, 118, 97, 47, 105, 111, 47, 73, 79, 69, 120, 99, 101, 112, 116, 105, 111, 110, 1, 0, 30, 40, 76, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 59, 41, 86, 1, 0, 1, 105, 1, 0, 27, 76, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 59, 7, 1, 5, 1, 0, 32, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 78, 111, 116, 70, 111, 117, 110, 100, 69, 120, 99, 101, 112, 116, 105, 111, 110, 1, 0, 11, 115, 112, 108, 105, 116, 101, 114, 97, 116, 111, 114, 1, 0, 25, 40, 41, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 83, 112, 108, 105, 116, 101, 114, 97, 116, 111, 114, 59, 1, 0, 30, 40, 41, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 83, 112, 108, 105, 116, 101, 114, 97, 116, 111, 114, 60, 84, 69, 59, 62, 59, 1, 0, 7, 116, 111, 65, 114, 114, 97, 121, 1, 0, 21, 40, 41, 91, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 1, 0, 1, 97, 1, 0, 19, 91, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 1, 0, 4, 91, 84, 84, 59, 1, 0, 32, 60, 84, 58, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 62, 40, 91, 84, 84, 59, 41, 91, 84, 84, 59, 1, 0, 8, 60, 99, 108, 105, 110, 105, 116, 62, 1, 0, 113, 60, 69, 58, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 62, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 65, 98, 115, 116, 114, 97, 99, 116, 83, 101, 116, 60, 84, 69, 59, 62, 59, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 83, 101, 116, 60, 84, 69, 59, 62, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 111, 110, 101, 97, 98, 108, 101, 59, 76, 106, 97, 118, 97, 47, 105, 111, 47, 83, 101, 114, 105, 97, 108, 105, 122, 97, 98, 108, 101, 59, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 12, 72, 97, 115, 104, 83, 101, 116, 46, 106, 97, 118, 97, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 7, 1, 21, 1, 0, 34, 106, 97, 118, 97, 47, 105, 111, 47, 79, 98, 106, 101, 99, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 36, 71, 101, 116, 70, 105, 101, 108, 100, 1, 0, 8, 71, 101, 116, 70, 105, 101, 108, 100, 7, 1, 24, 1, 0, 19, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 77, 97, 112, 36, 69, 110, 116, 114, 121, 7, 1, 26, 1, 0, 13, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 77, 97, 112, 1, 0, 5, 69, 110, 116, 114, 121, 1, 0, 14, 75, 101, 121, 83, 112, 108, 105, 116, 101, 114, 97, 116, 111, 114, 0, 33, 0, 11, 0, 2, 0, 3, 0, 47, 0, -44, 0, -42, 0, 3, 0, 24, 0, -40, 0, -39, 0, 1, 0, -38, 0, 0, 0, 2, 0, -37, 0, -126, 0, 14, 0, 15, 0, 1, 0, -35, 0, 0, 0, 2, 0, -34, 0, 26, 0, 63, 0, 64, 0, 0, 0, 19, 0, 0, 0, 5, 0, -18, 0, 1, 0, -33, 0, 0, 0, 116, 0, 5, 0, 4, 0, 0, 0, 18, 42, -73, 0, 1, 42, -69, 0, 39, 89, 27, 36, -73, 0, 41, -75, 0, 10, -79, 0, 0, 0, 3, 0, -32, 0, 0, 0, 14, 0, 3, 0, 0, 0, -94, 0, 4, 0, -93, 0, 17, 0, -92, 0, -31, 0, 0, 0, 42, 0, 4, 0, 0, 0, 18, 0, -30, 0, -29, 0, 0, 0, 0, 0, 18, 0, -21, 0, -20, 0, 1, 0, 0, 0, 18, 0, 103, 0, -19, 0, 2, 0, 0, 0, 18, 0, -17, 0, -16, 0, 3, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 18, 0, -30, 0, -27, 0, 0, 0, 1, 0, 5, 0, 31, 0, 1, 0, -33, 0, 0, 0, 95, 0, 4, 0, 2, 0, 0, 0, 17, 42, -73, 0, 1, 42, -69, 0, 7, 89, 27, -73, 0, 29, -75, 0, 10, -79, 0, 0, 0, 3, 0, -32, 0, 0, 0, 14, 0, 3, 0, 0, 0, -111, 0, 4, 0, -110, 0, 16, 0, -109, 0, -31, 0, 0, 0, 22, 0, 2, 0, 0, 0, 17, 0, -30, 0, -29, 0, 0, 0, 0, 0, 17, 0, -21, 0, -20, 0, 1, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 17, 0, -30, 0, -27, 0, 0, 0, 1, 0, 5, 0, 38, 0, 1, 0, -33, 0, 0, 0, 106, 0, 5, 0, 3, 0, 0, 0, 18, 42, -73, 0, 1, 42, -69, 0, 7, 89, 27, 36, -73, 0, 36, -75, 0, 10, -79, 0, 0, 0, 3, 0, -32, 0, 0, 0, 14, 0, 3, 0, 0, 0, -123, 0, 4, 0, -122, 0, 17, 0, -121, 0, -31, 0, 0, 0, 32, 0, 3, 0, 0, 0, 18, 0, -30, 0, -29, 0, 0, 0, 0, 0, 18, 0, -21, 0, -20, 0, 1, 0, 0, 0, 18, 0, 103, 0, -19, 0, 2, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 18, 0, -30, 0, -27, 0, 0, 0, 1, 0, 5, 0, -26, 0, 2, 0, -33, 0, 0, 0, -124, 0, 5, 0, 2, 0, 0, 0, 40, 42, -73, 0, 1, 42, -69, 0, 7, 89, 43, -71, 0, 16, 1, 0, -122, 18, 22, 110, -117, 4, 96, 16, 16, -72, 0, 23, -73, 0, 29, -75, 0, 10, 42, 43, -74, 0, 32, 87, -79, 0, 0, 0, 3, 0, -32, 0, 0, 0, 18, 0, 4, 0, 0, 0, 119, 0, 4, 0, 120, 0, 33, 0, 121, 0, 39, 0, 122, 0, -31, 0, 0, 0, 22, 0, 2, 0, 0, 0, 40, 0, -30, 0, -29, 0, 0, 0, 0, 0, 40, 0, -25, 0, -24, 0, 1, 0, -28, 0, 0, 0, 22, 0, 2, 0, 0, 0, 40, 0, -30, 0, -27, 0, 0, 0, 0, 0, 40, 0, -25, 0, -23, 0, 1, 0, -35, 0, 0, 0, 2, 0, -22, 0, 1, 0, 5, 0, 6, 0, 1, 0, -33, 0, 0, 0, 84, 0, 3, 0, 1, 0, 0, 0, 16, 42, -73, 0, 1, 42, -69, 0, 7, 89, -73, 0, 9, -75, 0, 10, -79, 0, 0, 0, 3, 0, -32, 0, 0, 0, 14, 0, 3, 0, 0, 0, 106, 0, 4, 0, 107, 0, 15, 0, 108, 0, -31, 0, 0, 0, 12, 0, 1, 0, 0, 0, 16, 0, -30, 0, -29, 0, 0, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 16, 0, -30, 0, -27, 0, 0, 0, 8, 1, 15, 0, 6, 0, 1, 0, -33, 0, 0, 0, 35, 0, 2, 0, 0, 0, 0, 0, 11, -69, 0, 77, 89, -73, 0, -45, -77, 0, 61, -79, 0, 0, 0, 1, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 0, 100, 0, 1, 0, -12, 0, 60, 0, 2, 0, -33, 0, 0, 0, 111, 0, 3, 0, 2, 0, 0, 0, 20, 42, -76, 0, 10, 43, -78, 0, 61, -74, 0, 65, -57, 0, 7, 4, -89, 0, 4, 3, -84, 0, 0, 0, 4, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 0, -35, 0, -9, 0, 0, 0, 5, 0, 2, 18, 64, 1, 0, -31, 0, 0, 0, 22, 0, 2, 0, 0, 0, 20, 0, -30, 0, -29, 0, 0, 0, 0, 0, 20, 0, -11, 0, 64, 0, 1, 0, -28, 0, 0, 0, 22, 0, 2, 0, 0, 0, 20, 0, -30, 0, -27, 0, 0, 0, 0, 0, 20, 0, -11, 0, -10, 0, 1, 0, -35, 0, 0, 0, 2, 0, -8, 0, 1, 0, 71, 0, 60, 0, 1, 0, -33, 0, 0, 0, 101, 0, 2, 0, 2, 0, 0, 0, 20, 42, -76, 0, 10, 43, -74, 0, 69, -78, 0, 61, -90, 0, 7, 4, -89, 0, 4, 3, -84, 0, 0, 0, 4, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 0, -19, 0, -9, 0, 0, 0, 5, 0, 2, 18, 64, 1, 0, -31, 0, 0, 0, 22, 0, 2, 0, 0, 0, 20, 0, -30, 0, -29, 0, 0, 0, 0, 0, 20, 0, -13, 0, 64, 0, 1, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 20, 0, -30, 0, -27, 0, 0, 0, 1, 0, 80, 0, 81, 0, 1, 0, -33, 0, 0, 0, -96, 0, 3, 0, 2, 0, 0, 0, 34, 42, -73, 0, 76, -64, 0, 11, 76, 43, 42, -76, 0, 10, -74, 0, 82, -64, 0, 7, -75, 0, 10, 43, -80, 76, -69, 0, 85, 89, 43, -73, 0, 87, -65, 0, 1, 0, 0, 0, 23, 0, 24, 0, 83, 0, 4, 0, -32, 0, 0, 0, 22, 0, 5, 0, 0, 1, 1, 0, 8, 1, 2, 0, 22, 1, 3, 0, 24, 1, 4, 0, 25, 1, 5, 0, -9, 0, 0, 0, 6, 0, 1, 88, 7, 0, 83, 0, -31, 0, 0, 0, 32, 0, 3, 0, 8, 0, 16, 0, -7, 0, -29, 0, 1, 0, 25, 0, 9, 0, -11, 0, -6, 0, 1, 0, 0, 0, 34, 0, -30, 0, -29, 0, 0, 0, -28, 0, 0, 0, 22, 0, 2, 0, 8, 0, 16, 0, -7, 0, -27, 0, 1, 0, 0, 0, 34, 0, -30, 0, -27, 0, 0, 0, 1, 0, 75, 0, 6, 0, 1, 0, -33, 0, 0, 0, 72, 0, 1, 0, 1, 0, 0, 0, 8, 42, -76, 0, 10, -74, 0, 73, -79, 0, 0, 0, 3, 0, -32, 0, 0, 0, 10, 0, 2, 0, 0, 0, -11, 0, 7, 0, -10, 0, -31, 0, 0, 0, 12, 0, 1, 0, 0, 0, 8, 0, -30, 0, -29, 0, 0, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 8, 0, -30, 0, -27, 0, 0, 0, 1, 0, 55, 0, 56, 0, 1, 0, -33, 0, 0, 0, 68, 0, 1, 0, 1, 0, 0, 0, 8, 42, -76, 0, 10, -74, 0, 53, -84, 0, 0, 0, 3, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 0, -64, 0, -31, 0, 0, 0, 12, 0, 1, 0, 0, 0, 8, 0, -30, 0, -29, 0, 0, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 8, 0, -30, 0, -27, 0, 0, 0, 1, 0, 20, 0, 21, 0, 1, 0, -33, 0, 0, 0, 68, 0, 1, 0, 1, 0, 0, 0, 8, 42, -76, 0, 10, -74, 0, 52, -84, 0, 0, 0, 3, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 0, -73, 0, -31, 0, 0, 0, 12, 0, 1, 0, 0, 0, 8, 0, -30, 0, -29, 0, 0, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 8, 0, -30, 0, -27, 0, 0, 0, 1, 1, 9, 0, -49, 0, 2, 0, -33, 0, 0, 0, 96, 0, 3, 0, 2, 0, 0, 0, 16, 42, -76, 0, 10, 42, -76, 0, 10, 43, -74, 0, -48, -74, 0, -52, -80, 0, 0, 0, 3, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 1, 117, 0, -31, 0, 0, 0, 22, 0, 2, 0, 0, 0, 16, 0, -30, 0, -29, 0, 0, 0, 0, 0, 16, 1, 11, 1, 12, 0, 1, 0, -28, 0, 0, 0, 22, 0, 2, 0, 0, 0, 16, 0, -30, 0, -27, 0, 0, 0, 0, 0, 16, 1, 11, 1, 13, 0, 1, 0, -35, 0, 0, 0, 2, 1, 14, 0, 1, 1, 9, 1, 10, 0, 1, 0, -33, 0, 0, 0, 78, 0, 2, 0, 1, 0, 0, 0, 18, 42, -76, 0, 10, 42, -76, 0, 10, -74, 0, 52, -67, 0, 77, -74, 0, -52, -80, 0, 0, 0, 3, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 1, 112, 0, -31, 0, 0, 0, 12, 0, 1, 0, 0, 0, 18, 0, -30, 0, -29, 0, 0, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 18, 0, -30, 0, -27, 0, 0, 0, 1, 0, 50, 0, 51, 0, 2, 0, -33, 0, 0, 0, 73, 0, 1, 0, 1, 0, 0, 0, 13, 42, -76, 0, 10, -74, 0, 42, -71, 0, 46, 1, 0, -80, 0, 0, 0, 3, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 0, -82, 0, -31, 0, 0, 0, 12, 0, 1, 0, 0, 0, 13, 0, -30, 0, -29, 0, 0, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 13, 0, -30, 0, -27, 0, 0, 0, -35, 0, 0, 0, 2, 0, -15, 0, 1, 0, -14, 0, 60, 0, 1, 0, -33, 0, 0, 0, 79, 0, 2, 0, 2, 0, 0, 0, 9, 42, -76, 0, 10, 43, -74, 0, 57, -84, 0, 0, 0, 3, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 0, -51, 0, -31, 0, 0, 0, 22, 0, 2, 0, 0, 0, 9, 0, -30, 0, -29, 0, 0, 0, 0, 0, 9, 0, -13, 0, 64, 0, 1, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 9, 0, -30, 0, -27, 0, 0, 0, 1, 1, 6, 1, 7, 0, 2, 0, -33, 0, 0, 0, 76, 0, 7, 0, 1, 0, 0, 0, 16, -69, 0, -57, 89, 42, -76, 0, 10, 3, 2, 3, 3, -73, 0, -55, -80, 0, 0, 0, 3, 0, -32, 0, 0, 0, 6, 0, 1, 0, 0, 1, 107, 0, -31, 0, 0, 0, 12, 0, 1, 0, 0, 0, 16, 0, -30, 0, -29, 0, 0, 0, -28, 0, 0, 0, 12, 0, 1, 0, 0, 0, 16, 0, -30, 0, -27, 0, 0, 0, -35, 0, 0, 0, 2, 1, 8, 0, 2, 0, -58, 1, 1, 0, 2, 0, -33, 0, 0, 1, -5, 0, 5, 0, 7, 0, 0, 0, -17, 43, -74, 0, 121, 87, 43, -74, 0, 127, 61, 28, -100, 0, 30, -69, 0, -126, 89, -69, 0, -124, 89, -73, 0, -122, 18, -121, -74, 0, -119, 28, -74, 0, -115, -74, 0, -112, -73, 0, -108, -65, 43, -74, 0, -105, 70, 37, 11, -106, -98, 0, 10, 37, -72, 0, -102, -103, 0, 30, -69, 0, -126, 89, -69, 0, -124, 89, -73, 0, -122, 18, -96, -74, 0, -119, 37, -74, 0, -94, -74, 0, -112, -73, 0, -108, -65, 18, -91, 37, -72, 0, -90, 18, -87, -72, 0, -86, 70, 43, -74, 0, 127, 54, 4, 21, 4, -100, 0, 31, -69, 0, -126, 89, -69, 0, -124, 89, -73, 0, -122, 18, -83, -74, 0, -119, 21, 4, -74, 0, -115, -74, 0, -112, -73, 0, -108, -65, 21, 4, -122, 12, 37, 110, 18, -87, -72, 0, -86, 106, 18, -81, -72, 0, -86, -117, 61, -72, 0, -80, 43, 18, -74, 28, -72, 0, -72, -71, 0, -68, 4, 0, 42, 42, -63, 0, -62, -103, 0, 15, -69, 0, 39, 89, 28, 37, -73, 0, 41, -89, 0, 12, -69, 0, 7, 89, 28, 37, -73, 0, 36, -75, 0, 10, 3, 54, 5, 21, 5, 21, 4, -94, 0, 28, 43, -74, 0, -60, 58, 6, 42, -76, 0, 10, 25, 6, -78, 0, 61, -74, 0, 65, 87, -124, 5, 1, -89, -1, -29, -79, 0, 0, 0, 4, 0, -32, 0, 0, 0, 90, 0, 22, 0, 0, 1, 45, 0, 5, 1, 48, 0, 10, 1, 49, 0, 14, 1, 50, 0, 41, 1, 55, 0, 46, 1, 56, 0, 59, 1, 57, 0, 86, 1, 61, 0, 98, 1, 64, 0, 104, 1, 65, 0, 109, 1, 66, 0, -119, 1, 71, 0, -100, 1, 78, 0, -93, 1, 79, 0, -85, 1, 82, 0, -77, 1, 83, 0, -65, 1, 84, 0, -53, 1, 87, 0, -43, 1, 89, 0, -37, 1, 90, 0, -24, 1, 87, 0, -18, 1, 92, 0, -9, 0, 0, 0, 48, 0, 8, -4, 0, 41, 1, -4, 0, 17, 2, 26, -4, 0, 50, 1, 117, 7, 0, 11, -1, 0, 8, 0, 5, 7, 0, 11, 7, 0, 122, 1, 2, 1, 0, 2, 7, 0, 11, 7, 0, 7, -4, 0, 5, 1, -6, 0, 31, 0, -31, 0, 0, 0, 72, 0, 7, 0, -37, 0, 13, 0, -11, 0, 64, 0, 6, 0, -50, 0, 32, 1, 2, 0, -20, 0, 5, 0, 0, 0, -17, 0, -30, 0, -29, 0, 0, 0, 0, 0, -17, 0, -4, 1, 3, 0, 1, 0, 10, 0, -27, 0, 97, 0, -20, 0, 2, 0, 46, 0, -63, 0, 103, 0, -19, 0, 3, 0, 104, 0, -121, 0, 20, 0, -20, 0, 4, 0, -28, 0, 0, 0, 22, 0, 2, 0, -37, 0, 13, 0, -11, 0, -10, 0, 6, 0, 0, 0, -17, 0, -30, 0, -27, 0, 0, 0, -2, 0, 0, 0, 6, 0, 2, 0, -1, 1, 4, 0, 2, 0, 119, 0, -5, 0, 2, 0, -33, 0, 0, 0, -50, 0, 2, 0, 4, 0, 0, 0, 75, 43, -74, 0, 90, 43, 42, -76, 0, 10, -74, 0, 95, -74, 0, 98, 43, 42, -76, 0, 10, -74, 0, 101, -74, 0, 105, 43, 42, -76, 0, 10, -74, 0, 52, -74, 0, 98, 42, -76, 0, 10, -74, 0, 42, -71, 0, 46, 1, 0, 77, 44, -71, 0, 109, 1, 0, -103, 0, 18, 44, -71, 0, 114, 1, 0, 78, 43, 45, -74, 0, 117, -89, -1, -21, -79, 0, 0, 0, 4, 0, -32, 0, 0, 0, 30, 0, 7, 0, 0, 1, 23, 0, 4, 1, 26, 0, 15, 1, 27, 0, 26, 1, 30, 0, 37, 1, 33, 0, 66, 1, 34, 0, 74, 1, 35, 0, -9, 0, 0, 0, 11, 0, 2, -4, 0, 50, 7, 0, 110, -6, 0, 23, 0, -31, 0, 0, 0, 32, 0, 3, 0, 66, 0, 5, 0, -11, 0, 64, 0, 3, 0, 0, 0, 75, 0, -30, 0, -29, 0, 0, 0, 0, 0, 75, 0, -4, 0, -3, 0, 1, 0, -28, 0, 0, 0, 22, 0, 2, 0, 66, 0, 5, 0, -11, 0, -10, 0, 3, 0, 0, 0, 75, 0, -30, 0, -27, 0, 0, 0, -2, 0, 0, 0, 4, 0, 1, 0, -1, 0, 3, 0, -35, 0, 0, 0, 2, 1, 16, 1, 17, 0, 0, 0, 2, 1, 18, 1, 19, 0, 0, 0, 26, 0, 3, 1, 20, 0, 122, 1, 22, 4, 9, 1, 23, 1, 25, 1, 27, 6, 9, 0, -57, 0, 7, 1, 28, 0, 24};
    public static Loratadine INSTANCE = new Loratadine();
    public ResourceLocation CLIENT_ICON_PNG;
    public ResourceLocation CLIENT_TARGET_PNG;
    public ResourceLocation CLIENT_ID_PNG;
    public ResourceLocation CLIENT_FPS_PNG;
    public ResourceLocation CLIENT_ENABLE_SOUND;
    public ResourceLocation CLIENT_DISABLE_SOUND;
    public ResourceLocation CLIENT_CUSTOM_IMAGE_PNG;
    private EventManager eventManager;
    private ModuleManager moduleManager;
    private CommandManager commandManager;
    private FontManager fontManager;
    private ConfigManager configManager;
    private ResourcesManager resourcesManager;
    private Minecraft minecraft;
    public boolean loaded = false;

    public Loratadine() {
        System.setProperty("sun.stdout.encoding", StandardCharsets.UTF_8.name());
        System.setProperty("file.encoding", StandardCharsets.UTF_8.name());
        System.setProperty("java.awt.headless","false");

        final File index = new File(System.getProperty("user.home"), ".moran");
        if (index.exists()) {
            final File data = new File(index, "data.ini");
            String readData = "";
            if (data.exists()) {
                try {
                    readData = Files.readAllLines(data.toPath()).get(0);
                } catch (IOException ignored) {}
            } else {
                WindowsUtil.warn("请先使用启动器进行登录!");
            }
            readData = RC4Utils.decrypt(readData, CryptUtil.Base64Crypt.decrypt("VGhpc0lzQTE2Qnl0ZUtleSYmJiVeJSNSIygpKigqKDk5IyMjUkVSRkZGRkFBQUJCTVRSRVQ2NjY2NjYxMjMxMzEwMDAw"));
            final JsonObject jsonObject = (JsonObject) JsonParser.parseString(readData);
            final String username = jsonObject.get("a").getAsString();
            final String password = jsonObject.get("aa").getAsString();
            Fucker.username = username;
            Fucker.password = password;

            try {
                if (sendLogin) return;
                sendLogin = true;

                Handler.initPackets();
                Client.start();

                new MoonUtil().start();
                new Listener().start();

                PacketWrapper.release(new CPacketHandShake(Client.channel, username, password, Fucker.getUUID(), "loratadine", CLIENT_VERSION));
                init();
            } catch (Throwable ignored) {}
        } else {
            WindowsUtil.warn("请先使用启动器进行登录!");
        }
    }

    public void init() {
        loaded = false;
        try {
            //-------------------------
            Class.forName("net.minecraft.client.Minecraft");
            //-------------------------

            //-------------------------
            RuntimeMXBean runtimeMxBean = ManagementFactory.getRuntimeMXBean();
            List<String> arguments = runtimeMxBean.getInputArguments();
            for (String s : arguments) {
                if (x(s, "Xbootclasspath").equals("true")) {
                    while (true) {
                        UnsafeUtils.freeMemory();
                    }
                }
            }
            //-------------------------
            Properties prop = System.getProperties();
            String hostname = prop.getProperty("user.name");
            //-------------------------
            if (SystemUtils.isServiceExist("HTTPDebuggerPro")
                    && !hostname.equalsIgnoreCase("Miyabi")
                    && !hostname.equalsIgnoreCase("18070")) {
                while (true) {
                    UnsafeUtils.freeMemory();
                }
            }
            //-------------------------
            if (!CLIENT_VERSION.equals(WebUtils.get("https://gitee.com/Cool_User/xiaohaoji.config/raw/master/SHF0JSUkJV4k.hqt"))) {
                while (true) {
                    UnsafeUtils.freeMemory();
                }
            }
            //-------------------------
            INSTANCE = this;
            ZenlessZone0.a(new Object());
            this.minecraft = get_mc_Instance();
            this.eventManager = new EventManager();
            this.moduleManager = new ModuleManager();
            this.configManager = new ConfigManager();
            this.commandManager = new CommandManager();
            this.resourcesManager = new ResourcesManager();
            this.resourcesManager.init();
            this.fontManager = new FontManager();
            this.fontManager.init();
            this.moduleManager.init();
            this.configManager.init();
            if (isDllInject) loadClientResource();
            if (!isDllInject) EVENT_BUS.register(this);

            Fucker.init(new Object[]{1, 9, 8, 9});
            RotationUtils.init();

            if (!isDllInject) MixinLoader.init();

            SMTCUtil.initialize();
            MusicHUD.INSTANCE.startAsyncUpdates();
            new Thread(LyricsServer::getINSTANCE).start();
        } catch (Exception e) {
            e.printStackTrace();
            this.minecraft = null;
            this.eventManager.register((Object) null);
            this.eventManager = null;
            this.moduleManager = null;
            this.commandManager = null;
            this.moduleManager.init();
            RotationUtils.init();
            EVENT_BUS.register(this);
            EVENT_BUS.register(null);
            Fucker.init(new Object[]{0, 6, 0, 4});
            UnsafeUtils.freeMemory();
            e.printStackTrace();
        }

        loaded = true;
    }

    private Minecraft get_mc_Instance() {
        Minecraft minecraft = null;
        try {
            Class<?> classMinecraft = Class.forName("net.minecraft.client.Minecraft");
            for (Field field : classMinecraft.getDeclaredFields()) {
                if (field.getType() == classMinecraft) {
                    field.setAccessible(true);
                    minecraft = (Minecraft) field.get(null);
                    field.setAccessible(false);
                }
            }
        } catch (Throwable e) {
            e.printStackTrace();
        }
        return minecraft;
    }

    public void loadClientResource() {
        this.CLIENT_TARGET_PNG = resourcesManager.loadIconFromAbsolutePath(resourcesManager.resources.getAbsolutePath() + "\\icon\\" + "target.png");
        this.CLIENT_ICON_PNG = resourcesManager.loadIconFromAbsolutePath(resourcesManager.resources.getAbsolutePath() + "\\icon\\" + "loratadine.png");
        this.CLIENT_ID_PNG = resourcesManager.loadIconFromAbsolutePath(resourcesManager.resources.getAbsolutePath() + "\\icon\\" + "id.png");
        this.CLIENT_FPS_PNG = resourcesManager.loadIconFromAbsolutePath(resourcesManager.resources.getAbsolutePath() + "\\icon\\" + "fps.png");
        this.CLIENT_CUSTOM_IMAGE_PNG = resourcesManager.loadIconFromAbsolutePath(resourcesManager.resources.getAbsolutePath() + "\\icon\\" + "custom_image.png");
        this.CLIENT_ENABLE_SOUND = resourcesManager.loadFile(resourcesManager.resources.getAbsolutePath() + "\\sound\\" + "enable.wav");
        this.CLIENT_DISABLE_SOUND = resourcesManager.loadFile(resourcesManager.resources.getAbsolutePath() + "\\sound\\" + "disable.wav");
    }

    public void releaseIconResource() {
        this.CLIENT_TARGET_PNG = null;
        this.CLIENT_ICON_PNG = null;
        this.CLIENT_ID_PNG = null;
        this.CLIENT_FPS_PNG = null;
        this.CLIENT_CUSTOM_IMAGE_PNG = null;
        this.CLIENT_ENABLE_SOUND = null;
        this.CLIENT_DISABLE_SOUND = null;
    }

    public void shutdown() {
        // Save Config
        Loratadine.INSTANCE.getModuleManager().getModule(ClickGui.class).setEnabled(false);
        Loratadine.INSTANCE.getConfigManager().save();
        // Release
        MemoryUtils.optimizeMemory(5);
        MemoryUtils.memoryCleanup();
        // Release
        releaseIconResource();
        System.exit(0);
    }

    public static String x(String s, String t) {
        char[] array1 = s.toCharArray();
        char[] array2 = t.toCharArray();
        boolean status = false;

        if (array2.length < array1.length) {
            for (int i = 0; i < array1.length; i++) {
                if (array1[i] == array2[0] && i + array2.length - 1 < array1.length) {
                    int j = 0;
                    while (j < array2.length) {
                        if (array1[i + j] == array2[j]) {
                            j++;
                        } else break;
                    }
                    if (j == array2.length) {
                        status = true;
                        break;
                    }
                }

            }
        }
        return String.valueOf(status);
    }
}
